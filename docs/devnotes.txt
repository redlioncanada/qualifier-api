next:
exclude whole product based on given rules - right now price is just getting excluded if 0 or pub=0


outcomes from convo w Bianca:

- reorganize cat output
- split locales at top of tree - actually, just make it a request param

top cats in FE:

laundry
cooking
  free standing range
  wall ovens
  (
    vent hoods - unconfirmed so ignore for now
    we're not doing cooktops
  )
fridge
DW




More questions for RLC/WP, 25 Jun:

Prices:

- listprice or saleprice?
- published=0 or price=0 mean exclude product. what if we're not in date range for price? exclude product or just don't include that price (prob meaning price would be null for that variant)



===========

Next step: start building actual API responses:
- simple product info
- categories
- true/false/etc fields, based on rules in spreadsheet

=====

final JSON should be list of all entries with catgroups used to create these
fields:
  top cat: applicance
  sub cat: type
  sub-sub cat: subtype
  etc..?


on my way with this:
  create a class to rep all objects from xml
  it won't be SOLID OOP, all data will just be accessible via properties
  but it will also have getParent()/getChildren() for stuff that's hierarchical
  like cats and products, to give easy reference while building json but avoid
  redundant data

figure out how to automatically trim all xml values! at least by default

how to handle hierarchy of catalogentries (products with 'parentpartnumber')?
  only show top level? or only bottom level?
  why are there levels? are they like additional categories?

  DESCRIPTIVE ATTRS APPLY TO TOP-LEVEL ENTRIES ONLY
  correspondingly, defining attrs apply to child entries only
    defining attrs are just colours - does this mean child entries are just
    colour vars? yes apparently from below

  are there >2 levels of cat entries?
    I doubt it, it seems the sub-entries are JUST colour variations!
    this is true across the board, all brands, all cat groups.
    maybe we can just ignore all child entries for the purpose of WPQ?
    check if there are >2 lvls. NO! only 2. phew.
    so basically, based on actual usage of this very abstract schema, 2nd-level
      products and their corresponding "defining attrs" are only for color
      variations. --> so check w Bianca if we care about colours at all. if not,
      can just use top level products and ignore defining attrs.

      if so, it's a bit complicated. i'll process all catalog entries, then
      attach the child entries to the parents, and then synthesize all that
      into colour variants in the API output.



why do defining attribute values have parent part number?
  i think just not normalized, probably can ignore

should defining attr values be attached to defining attrs or cat entries?
  maybe should just attach values directly to entries, not sure attr provides
  anything i need

also, defining attrs for mtg at least are just colour. what about other brands? yep, all just color